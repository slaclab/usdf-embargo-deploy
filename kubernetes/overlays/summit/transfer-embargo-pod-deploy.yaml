---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sdf-group-rubin
  # namespace: devel-transfer-embargo
spec:
  storageClassName: sdf-group-rubin
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sdf-data-rubin
  # namespace: devel-transfer-embargo
spec:
  storageClassName: sdf-data-rubin
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
# apiVersion: batch/v1
apiVersion: v1
kind: Pod
metadata:
  name: transfer-embargo-temp
#  namespace: summit
spec:
  securityContext:
    runAsUser: 18296
    runAsGroup: 4085
  containers:
  - name: transfer-embargo-container
    image: "ghcr.io/lsst-dm/transfer-embargo:latest"
    imagePullPolicy: Always
    env:
    - name: FROMREPO
      value: "s3://rubin-summit-users/butler.yaml"
    - name: TOREPO
      value: "/sdf/group/rubin/repo/prompt"
   #  value: "/sdf/data/rubin/user/jarugula/temp_butler/temp_to_test"
    - name: INSTRUMENT
      value: "LATISS"
    - name: EMBARGO_HRS
      value: "0.1"
    # - name: datasettype
    #   value: "raw"
    # - name: collection
    #   value: "LATISS/raw/all"
    - name: NOW
      value: "2022-09-01 21:46:50.272000"
    - name: MOVE
      value: "False"
    - name: LOG
      value: "True"
    - name: PGPASSWORD
      valueFrom:
          secretKeyRef:
            name: db-env
            key: pg_password
    - name: PGUSER
      valueFrom:
          secretKeyRef:
            name: db-env
            key: pg_username
    - name: S3_ENDPOINT_URL
      value: https://s3dfrgw.slac.stanford.edu
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: s3
          key: s3_access
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: s3
          key: s3_key
    volumeMounts:
      - name: sdf-group-rubin
        mountPath: /sdf/group/rubin
      - name: sdf-data-rubin
        mountPath: /sdf/data/rubin
  volumes:
  - name: sdf-group-rubin
    persistentVolumeClaim:
      claimName: sdf-group-rubin
      # storageClassName: sdf-group-rubin
  - name: sdf-data-rubin
    persistentVolumeClaim:
      claimName: sdf-data-rubin
      # storageClassName: sdf-data-rubin
  restartPolicy: OnFailure


